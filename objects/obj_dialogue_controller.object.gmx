<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dialogue_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

//The current message displayed on the screen
pos = 0;
text = "";
branch = 0;

isTalking = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

//The length of the current dialogue branch
dialogues = array_length_2d(obj_npc.talk, branch);

//Length of current options
options = array_length_2d(obj_npc.option, branch);

if pos == dialogues{
    choice = true;
    
    //Check if player makes a choice with keyboard
    if keyboard_check_released(ord('1')){
        if instance_exists(obj_npc.option[branch,0]) and obj_npc.option[branch,0] != "" {
            branch = 1;
            pos = 0;
            scr_dialogue_draw();
        }
    }
    
    if keyboard_check_released(ord('2')){
        if instance_exists(obj_npc.option[branch,1]) and obj_npc.option[branch,1] != "" {
            branch = 2;
            pos = 0;
            scr_dialogue_draw();
        }
    }
    
    if keyboard_check_released(ord('3')){
        if instance_exists(obj_npc.option[branch,2]) and obj_npc.option[branch,2] != "" {
            branch = 3;
            pos = 0;
            scr_dialogue_draw();   
        }
    }
    
    if keyboard_check_released(ord('4')){
        if instance_exists(obj_npc.option[branch,3]) and obj_npc.option[branch,3] != "" {
            branch = 4;
            pos = 0;
            scr_dialogue_draw();
        }
    }
    
} else choice = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the text on the screen
draw_self();

draw_set_font(fnt_default);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_set_colour(c_white);

draw_text_ext(x, y+20, text, font_get_size(fnt_default)+4, room_width - 20);

///Draw the interactive responses on the screen when the text has reached the end
draw_set_color(c_yellow);
draw_set_font(fnt_interaction);
draw_set_halign(fa_left);

if choice{
    for(var i = 0; i &lt; options; i++){
        if instance_exists(obj_npc.option[branch,i]) and obj_npc.option[branch,i] != "" {
            draw_text_ext(40, 310 + i * font_get_size(fnt_interaction)+2, string(i+1) + ". " + string(obj_npc.option[branch,i]), font_get_size(fnt_default)+4, room_width - 20);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_dialogue_draw();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
